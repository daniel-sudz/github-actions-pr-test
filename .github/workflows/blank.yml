# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Custom deploy code is used to selectively deploy firebase functions that have changes
      # This code is located in functions/deployCache
      # The following lines commit the functions/entryPoints.json file which contains updated hashes used to determine which functions are needed to be deployed.  
      # Note: a nice feature is that commits from within github actions do not trigger workflows: https://github.community/t/push-from-action-does-not-trigger-subsequent-action/16854
      - name: Commit Firebase Cache Files Back
        run: |
          touch file2.test # test file
          git config --global user.email "<>"
          git config --global user.name "Automatic Firebase Functions Hash Commit"
          git add .
          git commit -m "Firebase Cache Auto Commit" || true # ensures 0 exit code when no files have changed
          git push
